digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname=helvetica] ;
edge [fontname=helvetica] ;
0 [label="payload-call-fraction <= 0.028\ngini = 0.456\nsamples = 1349\nvalue = [474, 875]\nclass = parallelizable", fillcolor="#399de575"] ;
1 [label="iterator-payload-non-cf-cohesion <= 0.027\ngini = 0.384\nsamples = 1122\nvalue = [291, 831]\nclass = parallelizable", fillcolor="#399de5a6"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="critical-payload-total-cohesion <= 0.289\ngini = 0.486\nsamples = 297\nvalue = [173, 124]\nclass = non-parallelizable", fillcolor="#e5813948"] ;
1 -> 2 ;
3 [label="payload-output-dependencies-number <= 1.5\ngini = 0.352\nsamples = 145\nvalue = [112, 33]\nclass = non-parallelizable", fillcolor="#e58139b4"] ;
2 -> 3 ;
4 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 4 ;
29 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 29 ;
40 [label="loop-depth <= 1.5\ngini = 0.481\nsamples = 152\nvalue = [61, 91]\nclass = parallelizable", fillcolor="#399de554"] ;
2 -> 40 ;
41 [label="(...)", fillcolor="#C0C0C0"] ;
40 -> 41 ;
46 [label="(...)", fillcolor="#C0C0C0"] ;
40 -> 46 ;
71 [label="loop-critical-payload-fraction <= 0.222\ngini = 0.245\nsamples = 825\nvalue = [118, 707]\nclass = parallelizable", fillcolor="#399de5d4"] ;
1 -> 71 ;
72 [label="payload-call-fraction <= 0.008\ngini = 0.186\nsamples = 705\nvalue = [73, 632]\nclass = parallelizable", fillcolor="#399de5e2"] ;
71 -> 72 ;
73 [label="(...)", fillcolor="#C0C0C0"] ;
72 -> 73 ;
168 [label="(...)", fillcolor="#C0C0C0"] ;
72 -> 168 ;
175 [label="critical-payload-mem-dependencies-number <= 2.5\ngini = 0.469\nsamples = 120\nvalue = [45, 75]\nclass = parallelizable", fillcolor="#399de566"] ;
71 -> 175 ;
176 [label="(...)", fillcolor="#C0C0C0"] ;
175 -> 176 ;
193 [label="(...)", fillcolor="#C0C0C0"] ;
175 -> 193 ;
220 [label="loop-inner-loop-num <= 1.5\ngini = 0.313\nsamples = 227\nvalue = [183, 44]\nclass = non-parallelizable", fillcolor="#e58139c2"] ;
0 -> 220 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
221 [label="loop-critical-payload-fraction <= 0.356\ngini = 0.212\nsamples = 183\nvalue = [161, 22]\nclass = non-parallelizable", fillcolor="#e58139dc"] ;
220 -> 221 ;
222 [label="iterator-payload-total-cohesion <= 0.522\ngini = 0.182\nsamples = 178\nvalue = [160, 18]\nclass = non-parallelizable", fillcolor="#e58139e2"] ;
221 -> 222 ;
223 [label="(...)", fillcolor="#C0C0C0"] ;
222 -> 223 ;
252 [label="(...)", fillcolor="#C0C0C0"] ;
222 -> 252 ;
255 [label="payload-mem-write-count <= 4.0\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = parallelizable", fillcolor="#399de5bf"] ;
221 -> 255 ;
256 [label="(...)", fillcolor="#C0C0C0"] ;
255 -> 256 ;
257 [label="(...)", fillcolor="#C0C0C0"] ;
255 -> 257 ;
258 [label="payload-mem-write-fraction <= 0.043\ngini = 0.5\nsamples = 44\nvalue = [22, 22]\nclass = non-parallelizable", fillcolor="#e5813900"] ;
220 -> 258 ;
259 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = parallelizable", fillcolor="#399de5ff"] ;
258 -> 259 ;
260 [label="loop-depth <= 1.5\ngini = 0.475\nsamples = 36\nvalue = [22, 14]\nclass = non-parallelizable", fillcolor="#e581395d"] ;
258 -> 260 ;
261 [label="(...)", fillcolor="#C0C0C0"] ;
260 -> 261 ;
270 [label="(...)", fillcolor="#C0C0C0"] ;
260 -> 270 ;
}