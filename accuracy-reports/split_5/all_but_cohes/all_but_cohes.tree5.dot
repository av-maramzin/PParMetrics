digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname=helvetica] ;
edge [fontname=helvetica] ;
0 [label="payload-call-count <= 0.5\ngini = 0.489\nsamples = 1136\nvalue = [485, 651]\nclass = parallelizable", fillcolor="#399de541"] ;
1 [label="critical-payload-mem-dependencies-number <= 1.5\ngini = 0.404\nsamples = 872\nvalue = [245, 627]\nclass = parallelizable", fillcolor="#399de59b"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="payload-getelemptr-fraction <= 0.076\ngini = 0.3\nsamples = 729\nvalue = [134, 595]\nclass = parallelizable", fillcolor="#399de5c6"] ;
1 -> 2 ;
3 [label="critical-payload-branch-fraction <= 0.062\ngini = 0.194\nsamples = 55\nvalue = [49, 6]\nclass = non-parallelizable", fillcolor="#e58139e0"] ;
2 -> 3 ;
4 [label="loop-depth <= 1.5\ngini = 0.5\nsamples = 8\nvalue = [4, 4]\nclass = non-parallelizable", fillcolor="#e5813900"] ;
3 -> 4 ;
5 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
4 -> 5 ;
6 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = parallelizable", fillcolor="#399de5ff"] ;
4 -> 6 ;
7 [label="iterator-conf-dependencies-number <= 0.5\ngini = 0.081\nsamples = 47\nvalue = [45, 2]\nclass = non-parallelizable", fillcolor="#e58139f4"] ;
3 -> 7 ;
8 [label="gini = 0.0\nsamples = 34\nvalue = [34, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
7 -> 8 ;
9 [label="loop-iterator-size <= 8.5\ngini = 0.26\nsamples = 13\nvalue = [11, 2]\nclass = non-parallelizable", fillcolor="#e58139d1"] ;
7 -> 9 ;
10 [label="(...)", fillcolor="#C0C0C0"] ;
9 -> 10 ;
11 [label="(...)", fillcolor="#C0C0C0"] ;
9 -> 11 ;
16 [label="critical-payload-reg-dependencies-number <= 22.0\ngini = 0.22\nsamples = 674\nvalue = [85, 589]\nclass = parallelizable", fillcolor="#399de5da"] ;
2 -> 16 ;
17 [label="iterator-branch-count <= 2.0\ngini = 0.175\nsamples = 650\nvalue = [63, 587]\nclass = parallelizable", fillcolor="#399de5e4"] ;
16 -> 17 ;
18 [label="payload-branch-count <= 23.0\ngini = 0.166\nsamples = 646\nvalue = [59, 587]\nclass = parallelizable", fillcolor="#399de5e5"] ;
17 -> 18 ;
19 [label="(...)", fillcolor="#C0C0C0"] ;
18 -> 19 ;
126 [label="(...)", fillcolor="#C0C0C0"] ;
18 -> 126 ;
127 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
17 -> 127 ;
128 [label="critical-payload-branch-count <= 10.5\ngini = 0.153\nsamples = 24\nvalue = [22, 2]\nclass = non-parallelizable", fillcolor="#e58139e8"] ;
16 -> 128 ;
129 [label="gini = 0.0\nsamples = 18\nvalue = [18, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
128 -> 129 ;
130 [label="loop-proper-sccs-number <= 11.5\ngini = 0.444\nsamples = 6\nvalue = [4, 2]\nclass = non-parallelizable", fillcolor="#e581397f"] ;
128 -> 130 ;
131 [label="(...)", fillcolor="#C0C0C0"] ;
130 -> 131 ;
132 [label="(...)", fillcolor="#C0C0C0"] ;
130 -> 132 ;
133 [label="critical-payload-total-dependencies-number <= 9.5\ngini = 0.347\nsamples = 143\nvalue = [111, 32]\nclass = non-parallelizable", fillcolor="#e58139b5"] ;
1 -> 133 ;
134 [label="payload-mem-read-fraction <= 0.101\ngini = 0.5\nsamples = 41\nvalue = [21, 20]\nclass = non-parallelizable", fillcolor="#e581390c"] ;
133 -> 134 ;
135 [label="critical-payload-cross-dependencies-number <= 0.5\ngini = 0.165\nsamples = 11\nvalue = [10, 1]\nclass = non-parallelizable", fillcolor="#e58139e6"] ;
134 -> 135 ;
136 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
135 -> 136 ;
137 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = parallelizable", fillcolor="#399de5ff"] ;
135 -> 137 ;
138 [label="loop-payload-fraction <= 0.68\ngini = 0.464\nsamples = 30\nvalue = [11, 19]\nclass = parallelizable", fillcolor="#399de56b"] ;
134 -> 138 ;
139 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
138 -> 139 ;
140 [label="payload-mem-write-fraction <= 0.061\ngini = 0.417\nsamples = 27\nvalue = [8, 19]\nclass = parallelizable", fillcolor="#399de594"] ;
138 -> 140 ;
141 [label="(...)", fillcolor="#C0C0C0"] ;
140 -> 141 ;
150 [label="(...)", fillcolor="#C0C0C0"] ;
140 -> 150 ;
151 [label="loop-critical-payload-fraction <= 0.263\ngini = 0.208\nsamples = 102\nvalue = [90, 12]\nclass = non-parallelizable", fillcolor="#e58139dd"] ;
133 -> 151 ;
152 [label="loop-critical-payload-fraction <= 0.245\ngini = 0.353\nsamples = 48\nvalue = [37, 11]\nclass = non-parallelizable", fillcolor="#e58139b3"] ;
151 -> 152 ;
153 [label="payload-cross-dependencies-number <= 1.5\ngini = 0.24\nsamples = 43\nvalue = [37, 6]\nclass = non-parallelizable", fillcolor="#e58139d6"] ;
152 -> 153 ;
154 [label="(...)", fillcolor="#C0C0C0"] ;
153 -> 154 ;
159 [label="(...)", fillcolor="#C0C0C0"] ;
153 -> 159 ;
164 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5]\nclass = parallelizable", fillcolor="#399de5ff"] ;
152 -> 164 ;
165 [label="loop-iterator-size <= 7.5\ngini = 0.036\nsamples = 54\nvalue = [53, 1]\nclass = non-parallelizable", fillcolor="#e58139fa"] ;
151 -> 165 ;
166 [label="gini = 0.0\nsamples = 53\nvalue = [53, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = parallelizable", fillcolor="#399de5ff"] ;
165 -> 167 ;
168 [label="loop-proper-sccs-number-diff <= 2.5\ngini = 0.165\nsamples = 264\nvalue = [240, 24]\nclass = non-parallelizable", fillcolor="#e58139e6"] ;
0 -> 168 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
169 [label="loop-critical-payload-fraction <= 0.319\ngini = 0.121\nsamples = 248\nvalue = [232, 16]\nclass = non-parallelizable", fillcolor="#e58139ed"] ;
168 -> 169 ;
170 [label="payload-branch-fraction <= 0.157\ngini = 0.097\nsamples = 234\nvalue = [222, 12]\nclass = non-parallelizable", fillcolor="#e58139f1"] ;
169 -> 170 ;
171 [label="payload-getelemptr-fraction <= 0.251\ngini = 0.188\nsamples = 105\nvalue = [94, 11]\nclass = non-parallelizable", fillcolor="#e58139e1"] ;
170 -> 171 ;
172 [label="payload-call-fraction <= 0.067\ngini = 0.484\nsamples = 17\nvalue = [10, 7]\nclass = non-parallelizable", fillcolor="#e581394d"] ;
171 -> 172 ;
173 [label="(...)", fillcolor="#C0C0C0"] ;
172 -> 173 ;
178 [label="(...)", fillcolor="#C0C0C0"] ;
172 -> 178 ;
179 [label="payload-call-fraction <= 0.007\ngini = 0.087\nsamples = 88\nvalue = [84, 4]\nclass = non-parallelizable", fillcolor="#e58139f3"] ;
171 -> 179 ;
180 [label="(...)", fillcolor="#C0C0C0"] ;
179 -> 180 ;
183 [label="(...)", fillcolor="#C0C0C0"] ;
179 -> 183 ;
184 [label="payload-mem-read-fraction <= 0.342\ngini = 0.015\nsamples = 129\nvalue = [128, 1]\nclass = non-parallelizable", fillcolor="#e58139fd"] ;
170 -> 184 ;
185 [label="gini = 0.0\nsamples = 114\nvalue = [114, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
184 -> 185 ;
186 [label="payload-branch-fraction <= 0.219\ngini = 0.124\nsamples = 15\nvalue = [14, 1]\nclass = non-parallelizable", fillcolor="#e58139ed"] ;
184 -> 186 ;
187 [label="(...)", fillcolor="#C0C0C0"] ;
186 -> 187 ;
188 [label="(...)", fillcolor="#C0C0C0"] ;
186 -> 188 ;
189 [label="payload-mem-read-count <= 5.0\ngini = 0.408\nsamples = 14\nvalue = [10, 4]\nclass = non-parallelizable", fillcolor="#e5813999"] ;
169 -> 189 ;
190 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = parallelizable", fillcolor="#399de5ff"] ;
189 -> 190 ;
191 [label="gini = 0.0\nsamples = 10\nvalue = [10, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
189 -> 191 ;
192 [label="payload-mem-dependencies-number <= 5.0\ngini = 0.5\nsamples = 16\nvalue = [8, 8]\nclass = non-parallelizable", fillcolor="#e5813900"] ;
168 -> 192 ;
193 [label="payload-getelemptr-fraction <= 0.237\ngini = 0.32\nsamples = 10\nvalue = [2, 8]\nclass = parallelizable", fillcolor="#399de5bf"] ;
192 -> 193 ;
194 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
193 -> 194 ;
195 [label="gini = 0.0\nsamples = 8\nvalue = [0, 8]\nclass = parallelizable", fillcolor="#399de5ff"] ;
193 -> 195 ;
196 [label="gini = 0.0\nsamples = 6\nvalue = [6, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
192 -> 196 ;
}