digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname=helvetica] ;
edge [fontname=helvetica] ;
0 [label="payload-call-fraction <= 0.001\ngini = 0.462\nsamples = 907\nvalue = [329, 578]\nclass = parallelizable", fillcolor="#399de56e"] ;
1 [label="iterator-payload-non-cf-cohesion <= 0.032\ngini = 0.368\nsamples = 732\nvalue = [178, 554]\nclass = parallelizable", fillcolor="#399de5ad"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="iterator-mem-read-fraction <= 0.16\ngini = 0.494\nsamples = 202\nvalue = [112, 90]\nclass = non-parallelizable", fillcolor="#e5813932"] ;
1 -> 2 ;
3 [label="critical-payload-mem-read-count <= 3.5\ngini = 0.363\nsamples = 126\nvalue = [96, 30]\nclass = non-parallelizable", fillcolor="#e58139af"] ;
2 -> 3 ;
4 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 4 ;
37 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 37 ;
38 [label="payload-mem-write-count <= 6.0\ngini = 0.332\nsamples = 76\nvalue = [16, 60]\nclass = parallelizable", fillcolor="#399de5bb"] ;
2 -> 38 ;
39 [label="(...)", fillcolor="#C0C0C0"] ;
38 -> 39 ;
60 [label="(...)", fillcolor="#C0C0C0"] ;
38 -> 60 ;
61 [label="loop-critical-payload-fraction <= 0.321\ngini = 0.218\nsamples = 530\nvalue = [66, 464]\nclass = parallelizable", fillcolor="#399de5db"] ;
1 -> 61 ;
62 [label="loop-payload-fraction <= 0.515\ngini = 0.189\nsamples = 511\nvalue = [54, 457]\nclass = parallelizable", fillcolor="#399de5e1"] ;
61 -> 62 ;
63 [label="(...)", fillcolor="#C0C0C0"] ;
62 -> 63 ;
68 [label="(...)", fillcolor="#C0C0C0"] ;
62 -> 68 ;
141 [label="iterator-payload-total-cohesion <= 0.227\ngini = 0.465\nsamples = 19\nvalue = [12, 7]\nclass = non-parallelizable", fillcolor="#e581396a"] ;
61 -> 141 ;
142 [label="(...)", fillcolor="#C0C0C0"] ;
141 -> 142 ;
143 [label="(...)", fillcolor="#C0C0C0"] ;
141 -> 143 ;
150 [label="loop-absolute-size <= 154.0\ngini = 0.237\nsamples = 175\nvalue = [151, 24]\nclass = non-parallelizable", fillcolor="#e58139d6"] ;
0 -> 150 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
151 [label="critical-payload-non-cf-cohesion <= 0.146\ngini = 0.136\nsamples = 150\nvalue = [139, 11]\nclass = non-parallelizable", fillcolor="#e58139eb"] ;
150 -> 151 ;
152 [label="iterator-payload-non-cf-cohesion <= 0.102\ngini = 0.103\nsamples = 147\nvalue = [139, 8]\nclass = non-parallelizable", fillcolor="#e58139f0"] ;
151 -> 152 ;
153 [label="(...)", fillcolor="#C0C0C0"] ;
152 -> 153 ;
166 [label="(...)", fillcolor="#C0C0C0"] ;
152 -> 166 ;
169 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3]\nclass = parallelizable", fillcolor="#399de5ff"] ;
151 -> 169 ;
170 [label="iterator-payload-non-cf-cohesion <= 0.025\ngini = 0.499\nsamples = 25\nvalue = [12, 13]\nclass = parallelizable", fillcolor="#399de514"] ;
150 -> 170 ;
171 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
170 -> 171 ;
172 [label="loop-payload-fraction <= 0.98\ngini = 0.133\nsamples = 14\nvalue = [1, 13]\nclass = parallelizable", fillcolor="#399de5eb"] ;
170 -> 172 ;
173 [label="(...)", fillcolor="#C0C0C0"] ;
172 -> 173 ;
174 [label="(...)", fillcolor="#C0C0C0"] ;
172 -> 174 ;
}