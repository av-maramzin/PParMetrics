digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname=helvetica] ;
edge [fontname=helvetica] ;
0 [label="payload-call-fraction <= 0.031\ngini = 0.458\nsamples = 1349\nvalue = [478, 871]\nclass = parallelizable", fillcolor="#399de573"] ;
1 [label="iterator-payload-non-cf-cohesion <= 0.027\ngini = 0.391\nsamples = 1134\nvalue = [302, 832]\nclass = parallelizable", fillcolor="#399de5a2"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="loop-inner-loop-num <= 1.5\ngini = 0.484\nsamples = 301\nvalue = [177, 124]\nclass = non-parallelizable", fillcolor="#e581394c"] ;
1 -> 2 ;
3 [label="payload-output-dependencies-number <= 1.5\ngini = 0.349\nsamples = 151\nvalue = [117, 34]\nclass = non-parallelizable", fillcolor="#e58139b5"] ;
2 -> 3 ;
4 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 4 ;
31 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 31 ;
40 [label="loop-depth <= 1.5\ngini = 0.48\nsamples = 150\nvalue = [60, 90]\nclass = parallelizable", fillcolor="#399de555"] ;
2 -> 40 ;
41 [label="(...)", fillcolor="#C0C0C0"] ;
40 -> 41 ;
52 [label="(...)", fillcolor="#C0C0C0"] ;
40 -> 52 ;
67 [label="critical-payload-mem-dependencies-number <= 2.5\ngini = 0.255\nsamples = 833\nvalue = [125, 708]\nclass = parallelizable", fillcolor="#399de5d2"] ;
1 -> 67 ;
68 [label="payload-call-fraction <= 0.008\ngini = 0.177\nsamples = 654\nvalue = [64, 590]\nclass = parallelizable", fillcolor="#399de5e3"] ;
67 -> 68 ;
69 [label="(...)", fillcolor="#C0C0C0"] ;
68 -> 69 ;
174 [label="(...)", fillcolor="#C0C0C0"] ;
68 -> 174 ;
181 [label="loop-critical-payload-fraction <= 0.239\ngini = 0.449\nsamples = 179\nvalue = [61, 118]\nclass = parallelizable", fillcolor="#399de57b"] ;
67 -> 181 ;
182 [label="(...)", fillcolor="#C0C0C0"] ;
181 -> 182 ;
211 [label="(...)", fillcolor="#C0C0C0"] ;
181 -> 211 ;
232 [label="critical-payload-reg-dependencies-number <= 21.0\ngini = 0.297\nsamples = 215\nvalue = [176, 39]\nclass = non-parallelizable", fillcolor="#e58139c6"] ;
0 -> 232 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
233 [label="loop-critical-payload-fraction <= 0.356\ngini = 0.248\nsamples = 200\nvalue = [171, 29]\nclass = non-parallelizable", fillcolor="#e58139d4"] ;
232 -> 233 ;
234 [label="iterator-payload-total-cohesion <= 0.522\ngini = 0.223\nsamples = 196\nvalue = [171, 25]\nclass = non-parallelizable", fillcolor="#e58139da"] ;
233 -> 234 ;
235 [label="(...)", fillcolor="#C0C0C0"] ;
234 -> 235 ;
278 [label="(...)", fillcolor="#C0C0C0"] ;
234 -> 278 ;
281 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = parallelizable", fillcolor="#399de5ff"] ;
233 -> 281 ;
282 [label="loop-depth <= 1.5\ngini = 0.444\nsamples = 15\nvalue = [5, 10]\nclass = parallelizable", fillcolor="#399de57f"] ;
232 -> 282 ;
283 [label="payload-call-count <= 22.0\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = parallelizable", fillcolor="#399de5e6"] ;
282 -> 283 ;
284 [label="(...)", fillcolor="#C0C0C0"] ;
283 -> 284 ;
285 [label="(...)", fillcolor="#C0C0C0"] ;
283 -> 285 ;
286 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
282 -> 286 ;
}