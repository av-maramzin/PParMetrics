digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname=helvetica] ;
edge [fontname=helvetica] ;
0 [label="payload-call-fraction <= 0.031\ngini = 0.458\nsamples = 1349\nvalue = [478, 871]\nclass = parallelizable", fillcolor="#399de573"] ;
1 [label="iterator-payload-non-cf-cohesion <= 0.027\ngini = 0.39\nsamples = 1136\nvalue = [302, 834]\nclass = parallelizable", fillcolor="#399de5a3"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="loop-inner-loop-num <= 1.5\ngini = 0.485\nsamples = 308\nvalue = [181, 127]\nclass = non-parallelizable", fillcolor="#e581394c"] ;
1 -> 2 ;
3 [label="payload-output-dependencies-number <= 1.5\ngini = 0.35\nsamples = 155\nvalue = [120, 35]\nclass = non-parallelizable", fillcolor="#e58139b5"] ;
2 -> 3 ;
4 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 4 ;
31 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 31 ;
42 [label="loop-depth <= 1.5\ngini = 0.479\nsamples = 153\nvalue = [61, 92]\nclass = parallelizable", fillcolor="#399de556"] ;
2 -> 42 ;
43 [label="(...)", fillcolor="#C0C0C0"] ;
42 -> 43 ;
54 [label="(...)", fillcolor="#C0C0C0"] ;
42 -> 54 ;
75 [label="critical-payload-mem-dependencies-number <= 2.5\ngini = 0.25\nsamples = 828\nvalue = [121, 707]\nclass = parallelizable", fillcolor="#399de5d3"] ;
1 -> 75 ;
76 [label="payload-call-fraction <= 0.008\ngini = 0.164\nsamples = 644\nvalue = [58, 586]\nclass = parallelizable", fillcolor="#399de5e6"] ;
75 -> 76 ;
77 [label="(...)", fillcolor="#C0C0C0"] ;
76 -> 77 ;
170 [label="(...)", fillcolor="#C0C0C0"] ;
76 -> 170 ;
177 [label="loop-critical-payload-fraction <= 0.239\ngini = 0.45\nsamples = 184\nvalue = [63, 121]\nclass = parallelizable", fillcolor="#399de57a"] ;
75 -> 177 ;
178 [label="(...)", fillcolor="#C0C0C0"] ;
177 -> 178 ;
207 [label="(...)", fillcolor="#C0C0C0"] ;
177 -> 207 ;
228 [label="critical-payload-reg-dependencies-number <= 21.0\ngini = 0.287\nsamples = 213\nvalue = [176, 37]\nclass = non-parallelizable", fillcolor="#e58139c9"] ;
0 -> 228 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
229 [label="loop-critical-payload-fraction <= 0.356\ngini = 0.237\nsamples = 197\nvalue = [170, 27]\nclass = non-parallelizable", fillcolor="#e58139d6"] ;
228 -> 229 ;
230 [label="iterator-payload-total-cohesion <= 0.522\ngini = 0.211\nsamples = 192\nvalue = [169, 23]\nclass = non-parallelizable", fillcolor="#e58139dc"] ;
229 -> 230 ;
231 [label="(...)", fillcolor="#C0C0C0"] ;
230 -> 231 ;
262 [label="(...)", fillcolor="#C0C0C0"] ;
230 -> 262 ;
265 [label="iterator-call-fraction <= 0.036\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = parallelizable", fillcolor="#399de5bf"] ;
229 -> 265 ;
266 [label="(...)", fillcolor="#C0C0C0"] ;
265 -> 266 ;
267 [label="(...)", fillcolor="#C0C0C0"] ;
265 -> 267 ;
268 [label="loop-depth <= 1.5\ngini = 0.469\nsamples = 16\nvalue = [6, 10]\nclass = parallelizable", fillcolor="#399de566"] ;
228 -> 268 ;
269 [label="payload-call-count <= 22.0\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = parallelizable", fillcolor="#399de5e6"] ;
268 -> 269 ;
270 [label="(...)", fillcolor="#C0C0C0"] ;
269 -> 270 ;
271 [label="(...)", fillcolor="#C0C0C0"] ;
269 -> 271 ;
272 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
268 -> 272 ;
}