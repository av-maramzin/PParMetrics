digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname=helvetica] ;
edge [fontname=helvetica] ;
0 [label="payload-call-fraction <= 0.031\ngini = 0.459\nsamples = 1349\nvalue = [481, 868]\nclass = parallelizable", fillcolor="#399de572"] ;
1 [label="iterator-payload-non-cf-cohesion <= 0.026\ngini = 0.39\nsamples = 1132\nvalue = [301, 831]\nclass = parallelizable", fillcolor="#399de5a3"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="loop-inner-loop-num <= 1.5\ngini = 0.478\nsamples = 289\nvalue = [175, 114]\nclass = non-parallelizable", fillcolor="#e5813959"] ;
1 -> 2 ;
3 [label="payload-output-dependencies-number <= 1.5\ngini = 0.333\nsamples = 147\nvalue = [116, 31]\nclass = non-parallelizable", fillcolor="#e58139bb"] ;
2 -> 3 ;
4 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 4 ;
25 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 25 ;
34 [label="loop-depth <= 1.5\ngini = 0.486\nsamples = 142\nvalue = [59, 83]\nclass = parallelizable", fillcolor="#399de54a"] ;
2 -> 34 ;
35 [label="(...)", fillcolor="#C0C0C0"] ;
34 -> 35 ;
42 [label="(...)", fillcolor="#C0C0C0"] ;
34 -> 42 ;
61 [label="critical-payload-mem-dependencies-number <= 2.5\ngini = 0.254\nsamples = 843\nvalue = [126, 717]\nclass = parallelizable", fillcolor="#399de5d2"] ;
1 -> 61 ;
62 [label="payload-call-fraction <= 0.008\ngini = 0.178\nsamples = 658\nvalue = [65, 593]\nclass = parallelizable", fillcolor="#399de5e3"] ;
61 -> 62 ;
63 [label="(...)", fillcolor="#C0C0C0"] ;
62 -> 63 ;
168 [label="(...)", fillcolor="#C0C0C0"] ;
62 -> 168 ;
175 [label="loop-critical-payload-fraction <= 0.239\ngini = 0.442\nsamples = 185\nvalue = [61, 124]\nclass = parallelizable", fillcolor="#399de582"] ;
61 -> 175 ;
176 [label="(...)", fillcolor="#C0C0C0"] ;
175 -> 176 ;
209 [label="(...)", fillcolor="#C0C0C0"] ;
175 -> 209 ;
226 [label="critical-payload-true-dependencies-number <= 21.0\ngini = 0.283\nsamples = 217\nvalue = [180, 37]\nclass = non-parallelizable", fillcolor="#e58139cb"] ;
0 -> 226 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
227 [label="loop-critical-payload-fraction <= 0.356\ngini = 0.233\nsamples = 201\nvalue = [174, 27]\nclass = non-parallelizable", fillcolor="#e58139d7"] ;
226 -> 227 ;
228 [label="iterator-payload-total-cohesion <= 0.522\ngini = 0.207\nsamples = 196\nvalue = [173, 23]\nclass = non-parallelizable", fillcolor="#e58139dd"] ;
227 -> 228 ;
229 [label="(...)", fillcolor="#C0C0C0"] ;
228 -> 229 ;
262 [label="(...)", fillcolor="#C0C0C0"] ;
228 -> 262 ;
265 [label="payload-true-dependencies-number <= 26.5\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = parallelizable", fillcolor="#399de5bf"] ;
227 -> 265 ;
266 [label="(...)", fillcolor="#C0C0C0"] ;
265 -> 266 ;
267 [label="(...)", fillcolor="#C0C0C0"] ;
265 -> 267 ;
268 [label="loop-depth <= 1.5\ngini = 0.469\nsamples = 16\nvalue = [6, 10]\nclass = parallelizable", fillcolor="#399de566"] ;
226 -> 268 ;
269 [label="payload-call-count <= 22.0\ngini = 0.165\nsamples = 11\nvalue = [1, 10]\nclass = parallelizable", fillcolor="#399de5e6"] ;
268 -> 269 ;
270 [label="(...)", fillcolor="#C0C0C0"] ;
269 -> 270 ;
271 [label="(...)", fillcolor="#C0C0C0"] ;
269 -> 271 ;
272 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
268 -> 272 ;
}