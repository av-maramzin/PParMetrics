digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname=helvetica] ;
edge [fontname=helvetica] ;
0 [label="payload-call-count <= 0.5\ngini = 0.493\nsamples = 1349\nvalue = [597, 752]\nclass = parallelizable", fillcolor="#399de535"] ;
1 [label="iterator-payload-non-cf-cohesion <= 0.034\ngini = 0.423\nsamples = 1039\nvalue = [316, 723]\nclass = parallelizable", fillcolor="#399de590"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="critical-payload-mem-read-count <= 3.5\ngini = 0.473\nsamples = 385\nvalue = [237, 148]\nclass = non-parallelizable", fillcolor="#e5813960"] ;
1 -> 2 ;
3 [label="critical-payload-total-cohesion <= 0.289\ngini = 0.498\nsamples = 312\nvalue = [166, 146]\nclass = non-parallelizable", fillcolor="#e581391f"] ;
2 -> 3 ;
4 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 4 ;
41 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 41 ;
82 [label="loop-critical-payload-fraction <= 0.057\ngini = 0.053\nsamples = 73\nvalue = [71, 2]\nclass = non-parallelizable", fillcolor="#e58139f8"] ;
2 -> 82 ;
83 [label="(...)", fillcolor="#C0C0C0"] ;
82 -> 83 ;
84 [label="(...)", fillcolor="#C0C0C0"] ;
82 -> 84 ;
85 [label="loop-payload-fraction <= 0.515\ngini = 0.212\nsamples = 654\nvalue = [79, 575]\nclass = parallelizable", fillcolor="#399de5dc"] ;
1 -> 85 ;
86 [label="iterator-branch-fraction <= 0.102\ngini = 0.375\nsamples = 16\nvalue = [12, 4]\nclass = non-parallelizable", fillcolor="#e58139aa"] ;
85 -> 86 ;
87 [label="(...)", fillcolor="#C0C0C0"] ;
86 -> 87 ;
90 [label="(...)", fillcolor="#C0C0C0"] ;
86 -> 90 ;
93 [label="loop-critical-payload-fraction <= 0.359\ngini = 0.188\nsamples = 638\nvalue = [67, 571]\nclass = parallelizable", fillcolor="#399de5e1"] ;
85 -> 93 ;
94 [label="(...)", fillcolor="#C0C0C0"] ;
93 -> 94 ;
181 [label="(...)", fillcolor="#C0C0C0"] ;
93 -> 181 ;
190 [label="payload-mem-write-fraction <= 0.047\ngini = 0.17\nsamples = 310\nvalue = [281, 29]\nclass = non-parallelizable", fillcolor="#e58139e5"] ;
0 -> 190 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
191 [label="payload-call-count <= 4.5\ngini = 0.386\nsamples = 65\nvalue = [48, 17]\nclass = non-parallelizable", fillcolor="#e58139a5"] ;
190 -> 191 ;
192 [label="payload-call-fraction <= 0.046\ngini = 0.204\nsamples = 52\nvalue = [46, 6]\nclass = non-parallelizable", fillcolor="#e58139de"] ;
191 -> 192 ;
193 [label="(...)", fillcolor="#C0C0C0"] ;
192 -> 193 ;
202 [label="(...)", fillcolor="#C0C0C0"] ;
192 -> 202 ;
203 [label="payload-getelemptr-count <= 121.0\ngini = 0.26\nsamples = 13\nvalue = [2, 11]\nclass = parallelizable", fillcolor="#399de5d1"] ;
191 -> 203 ;
204 [label="(...)", fillcolor="#C0C0C0"] ;
203 -> 204 ;
205 [label="(...)", fillcolor="#C0C0C0"] ;
203 -> 205 ;
206 [label="critical-payload-non-cf-cohesion <= 0.152\ngini = 0.093\nsamples = 245\nvalue = [233, 12]\nclass = non-parallelizable", fillcolor="#e58139f2"] ;
190 -> 206 ;
207 [label="iterator-payload-total-cohesion <= 0.522\ngini = 0.057\nsamples = 237\nvalue = [230, 7]\nclass = non-parallelizable", fillcolor="#e58139f7"] ;
206 -> 207 ;
208 [label="(...)", fillcolor="#C0C0C0"] ;
207 -> 208 ;
221 [label="(...)", fillcolor="#C0C0C0"] ;
207 -> 221 ;
224 [label="payload-mem-read-fraction <= 0.15\ngini = 0.469\nsamples = 8\nvalue = [3, 5]\nclass = parallelizable", fillcolor="#399de566"] ;
206 -> 224 ;
225 [label="(...)", fillcolor="#C0C0C0"] ;
224 -> 225 ;
226 [label="(...)", fillcolor="#C0C0C0"] ;
224 -> 226 ;
}