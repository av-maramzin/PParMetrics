digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname=helvetica] ;
edge [fontname=helvetica] ;
0 [label="payload-call-fraction <= 0.028\ngini = 0.457\nsamples = 1349\nvalue = [476, 873]\nclass = parallelizable", fillcolor="#399de574"] ;
1 [label="iterator-payload-non-cf-cohesion <= 0.027\ngini = 0.385\nsamples = 1122\nvalue = [292, 830]\nclass = parallelizable", fillcolor="#399de5a5"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="critical-payload-total-cohesion <= 0.289\ngini = 0.49\nsamples = 302\nvalue = [172, 130]\nclass = non-parallelizable", fillcolor="#e581393e"] ;
1 -> 2 ;
3 [label="payload-output-dependencies-number <= 1.5\ngini = 0.349\nsamples = 142\nvalue = [110, 32]\nclass = non-parallelizable", fillcolor="#e58139b5"] ;
2 -> 3 ;
4 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 4 ;
27 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 27 ;
38 [label="loop-depth <= 1.5\ngini = 0.475\nsamples = 160\nvalue = [62, 98]\nclass = parallelizable", fillcolor="#399de55e"] ;
2 -> 38 ;
39 [label="(...)", fillcolor="#C0C0C0"] ;
38 -> 39 ;
44 [label="(...)", fillcolor="#C0C0C0"] ;
38 -> 44 ;
69 [label="critical-payload-mem-dependencies-number <= 2.5\ngini = 0.25\nsamples = 820\nvalue = [120, 700]\nclass = parallelizable", fillcolor="#399de5d3"] ;
1 -> 69 ;
70 [label="payload-call-fraction <= 0.008\ngini = 0.171\nsamples = 637\nvalue = [60, 577]\nclass = parallelizable", fillcolor="#399de5e4"] ;
69 -> 70 ;
71 [label="(...)", fillcolor="#C0C0C0"] ;
70 -> 71 ;
154 [label="(...)", fillcolor="#C0C0C0"] ;
70 -> 154 ;
161 [label="loop-critical-payload-fraction <= 0.239\ngini = 0.441\nsamples = 183\nvalue = [60, 123]\nclass = parallelizable", fillcolor="#399de583"] ;
69 -> 161 ;
162 [label="(...)", fillcolor="#C0C0C0"] ;
161 -> 162 ;
197 [label="(...)", fillcolor="#C0C0C0"] ;
161 -> 197 ;
218 [label="loop-inner-loop-num <= 1.5\ngini = 0.307\nsamples = 227\nvalue = [184, 43]\nclass = non-parallelizable", fillcolor="#e58139c3"] ;
0 -> 218 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
219 [label="loop-critical-payload-fraction <= 0.356\ngini = 0.201\nsamples = 185\nvalue = [164, 21]\nclass = non-parallelizable", fillcolor="#e58139de"] ;
218 -> 219 ;
220 [label="iterator-payload-total-cohesion <= 0.522\ngini = 0.171\nsamples = 180\nvalue = [163, 17]\nclass = non-parallelizable", fillcolor="#e58139e4"] ;
219 -> 220 ;
221 [label="(...)", fillcolor="#C0C0C0"] ;
220 -> 221 ;
250 [label="(...)", fillcolor="#C0C0C0"] ;
220 -> 250 ;
253 [label="loop-payload-fraction <= 0.684\ngini = 0.32\nsamples = 5\nvalue = [1, 4]\nclass = parallelizable", fillcolor="#399de5bf"] ;
219 -> 253 ;
254 [label="(...)", fillcolor="#C0C0C0"] ;
253 -> 254 ;
255 [label="(...)", fillcolor="#C0C0C0"] ;
253 -> 255 ;
256 [label="loop-depth <= 1.5\ngini = 0.499\nsamples = 42\nvalue = [20, 22]\nclass = parallelizable", fillcolor="#399de517"] ;
218 -> 256 ;
257 [label="payload-call-fraction <= 0.055\ngini = 0.351\nsamples = 22\nvalue = [5, 17]\nclass = parallelizable", fillcolor="#399de5b4"] ;
256 -> 257 ;
258 [label="(...)", fillcolor="#C0C0C0"] ;
257 -> 258 ;
259 [label="(...)", fillcolor="#C0C0C0"] ;
257 -> 259 ;
264 [label="payload-call-fraction <= 0.031\ngini = 0.375\nsamples = 20\nvalue = [15, 5]\nclass = non-parallelizable", fillcolor="#e58139aa"] ;
256 -> 264 ;
265 [label="(...)", fillcolor="#C0C0C0"] ;
264 -> 265 ;
266 [label="(...)", fillcolor="#C0C0C0"] ;
264 -> 266 ;
}