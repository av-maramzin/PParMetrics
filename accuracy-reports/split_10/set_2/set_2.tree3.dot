digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname=helvetica] ;
edge [fontname=helvetica] ;
0 [label="payload-call-fraction <= 0.001\ngini = 0.462\nsamples = 1020\nvalue = [369, 651]\nclass = parallelizable", fillcolor="#399de56e"] ;
1 [label="iterator-payload-non-cf-cohesion <= 0.034\ngini = 0.364\nsamples = 820\nvalue = [196, 624]\nclass = parallelizable", fillcolor="#399de5af"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="iterator-mem-read-fraction <= 0.16\ngini = 0.499\nsamples = 255\nvalue = [133, 122]\nclass = non-parallelizable", fillcolor="#e5813915"] ;
1 -> 2 ;
3 [label="critical-payload-mem-read-count <= 3.5\ngini = 0.416\nsamples = 163\nvalue = [115, 48]\nclass = non-parallelizable", fillcolor="#e5813995"] ;
2 -> 3 ;
4 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 4 ;
53 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 53 ;
54 [label="payload-mem-write-count <= 6.0\ngini = 0.315\nsamples = 92\nvalue = [18, 74]\nclass = parallelizable", fillcolor="#399de5c1"] ;
2 -> 54 ;
55 [label="(...)", fillcolor="#C0C0C0"] ;
54 -> 55 ;
74 [label="(...)", fillcolor="#C0C0C0"] ;
54 -> 74 ;
75 [label="loop-critical-payload-fraction <= 0.321\ngini = 0.198\nsamples = 565\nvalue = [63, 502]\nclass = parallelizable", fillcolor="#399de5df"] ;
1 -> 75 ;
76 [label="loop-payload-fraction <= 0.515\ngini = 0.172\nsamples = 547\nvalue = [52, 495]\nclass = parallelizable", fillcolor="#399de5e4"] ;
75 -> 76 ;
77 [label="(...)", fillcolor="#C0C0C0"] ;
76 -> 77 ;
82 [label="(...)", fillcolor="#C0C0C0"] ;
76 -> 82 ;
147 [label="iterator-mem-read-fraction <= 0.155\ngini = 0.475\nsamples = 18\nvalue = [11, 7]\nclass = non-parallelizable", fillcolor="#e581395d"] ;
75 -> 147 ;
148 [label="(...)", fillcolor="#C0C0C0"] ;
147 -> 148 ;
153 [label="(...)", fillcolor="#C0C0C0"] ;
147 -> 153 ;
154 [label="loop-absolute-size <= 154.0\ngini = 0.234\nsamples = 200\nvalue = [173, 27]\nclass = non-parallelizable", fillcolor="#e58139d7"] ;
0 -> 154 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
155 [label="loop-critical-payload-fraction <= 0.356\ngini = 0.129\nsamples = 173\nvalue = [161, 12]\nclass = non-parallelizable", fillcolor="#e58139ec"] ;
154 -> 155 ;
156 [label="iterator-payload-non-cf-cohesion <= 0.102\ngini = 0.09\nsamples = 169\nvalue = [161, 8]\nclass = non-parallelizable", fillcolor="#e58139f2"] ;
155 -> 156 ;
157 [label="(...)", fillcolor="#C0C0C0"] ;
156 -> 157 ;
170 [label="(...)", fillcolor="#C0C0C0"] ;
156 -> 170 ;
173 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4]\nclass = parallelizable", fillcolor="#399de5ff"] ;
155 -> 173 ;
174 [label="iterator-payload-non-cf-cohesion <= 0.025\ngini = 0.494\nsamples = 27\nvalue = [12, 15]\nclass = parallelizable", fillcolor="#399de533"] ;
154 -> 174 ;
175 [label="gini = 0.0\nsamples = 11\nvalue = [11, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
174 -> 175 ;
176 [label="payload-mem-write-count <= 15.5\ngini = 0.117\nsamples = 16\nvalue = [1, 15]\nclass = parallelizable", fillcolor="#399de5ee"] ;
174 -> 176 ;
177 [label="(...)", fillcolor="#C0C0C0"] ;
176 -> 177 ;
178 [label="(...)", fillcolor="#C0C0C0"] ;
176 -> 178 ;
}