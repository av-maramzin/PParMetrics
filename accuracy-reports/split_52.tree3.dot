digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname=helvetica] ;
edge [fontname=helvetica] ;
0 [label="payload-call-fraction <= 0.031\ngini = 0.459\nsamples = 1349\nvalue = [482, 867]\nclass = parallelizable", fillcolor="#399de571"] ;
1 [label="iterator-payload-non-cf-cohesion <= 0.027\ngini = 0.393\nsamples = 1136\nvalue = [305, 831]\nclass = parallelizable", fillcolor="#399de5a1"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="critical-payload-total-cohesion <= 0.289\ngini = 0.483\nsamples = 300\nvalue = [178, 122]\nclass = non-parallelizable", fillcolor="#e5813950"] ;
1 -> 2 ;
3 [label="payload-output-dependencies-number <= 1.5\ngini = 0.344\nsamples = 145\nvalue = [113, 32]\nclass = non-parallelizable", fillcolor="#e58139b7"] ;
2 -> 3 ;
4 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 4 ;
29 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 29 ;
40 [label="loop-depth <= 1.5\ngini = 0.487\nsamples = 155\nvalue = [65, 90]\nclass = parallelizable", fillcolor="#399de547"] ;
2 -> 40 ;
41 [label="(...)", fillcolor="#C0C0C0"] ;
40 -> 41 ;
46 [label="(...)", fillcolor="#C0C0C0"] ;
40 -> 46 ;
75 [label="critical-payload-mem-dependencies-number <= 2.5\ngini = 0.258\nsamples = 836\nvalue = [127, 709]\nclass = parallelizable", fillcolor="#399de5d1"] ;
1 -> 75 ;
76 [label="payload-call-fraction <= 0.008\ngini = 0.179\nsamples = 656\nvalue = [65, 591]\nclass = parallelizable", fillcolor="#399de5e3"] ;
75 -> 76 ;
77 [label="(...)", fillcolor="#C0C0C0"] ;
76 -> 77 ;
182 [label="(...)", fillcolor="#C0C0C0"] ;
76 -> 182 ;
189 [label="loop-critical-payload-fraction <= 0.239\ngini = 0.452\nsamples = 180\nvalue = [62, 118]\nclass = parallelizable", fillcolor="#399de579"] ;
75 -> 189 ;
190 [label="(...)", fillcolor="#C0C0C0"] ;
189 -> 190 ;
219 [label="(...)", fillcolor="#C0C0C0"] ;
189 -> 219 ;
238 [label="loop-depth <= 1.5\ngini = 0.281\nsamples = 213\nvalue = [177, 36]\nclass = non-parallelizable", fillcolor="#e58139cb"] ;
0 -> 238 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
239 [label="payload-call-fraction <= 0.066\ngini = 0.42\nsamples = 100\nvalue = [70, 30]\nclass = non-parallelizable", fillcolor="#e5813992"] ;
238 -> 239 ;
240 [label="payload-call-fraction <= 0.034\ngini = 0.4\nsamples = 29\nvalue = [8, 21]\nclass = parallelizable", fillcolor="#399de59e"] ;
239 -> 240 ;
241 [label="(...)", fillcolor="#C0C0C0"] ;
240 -> 241 ;
242 [label="(...)", fillcolor="#C0C0C0"] ;
240 -> 242 ;
251 [label="payload-reg-dependencies-number <= 60.0\ngini = 0.221\nsamples = 71\nvalue = [62, 9]\nclass = non-parallelizable", fillcolor="#e58139da"] ;
239 -> 251 ;
252 [label="(...)", fillcolor="#C0C0C0"] ;
251 -> 252 ;
265 [label="(...)", fillcolor="#C0C0C0"] ;
251 -> 265 ;
268 [label="payload-mem-write-fraction <= 0.034\ngini = 0.101\nsamples = 113\nvalue = [107, 6]\nclass = non-parallelizable", fillcolor="#e58139f1"] ;
238 -> 268 ;
269 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2]\nclass = parallelizable", fillcolor="#399de5ff"] ;
268 -> 269 ;
270 [label="iterator-payload-non-cf-cohesion <= 0.088\ngini = 0.069\nsamples = 111\nvalue = [107, 4]\nclass = non-parallelizable", fillcolor="#e58139f5"] ;
268 -> 270 ;
271 [label="(...)", fillcolor="#C0C0C0"] ;
270 -> 271 ;
276 [label="(...)", fillcolor="#C0C0C0"] ;
270 -> 276 ;
}