
digraph G {


node53 [label="
for.cond34:                                       ; preds = %for.inc50, %for.end33
  %16 = load i32, i32* %i, align 4
  %cmp35 = icmp slt i32 %16, 100
  br i1 %cmp35, label %for.body36, label %for.end52
",shape=rectangle ]
node52 [label="
for.cond16:                                       ; preds = %for.inc31, %for.end15
  %8 = load i32, i32* %i, align 4
  %cmp17 = icmp slt i32 %8, 100
  br i1 %cmp17, label %for.body18, label %for.end33
",shape=rectangle ]
node51 [label="
for.inc46:                                        ; preds = %for.body39
  %21 = load i32, i32* %j, align 4
  %inc47 = add nsw i32 %21, 1
  store i32 %inc47, i32* %j, align 4
  br label %for.cond37
",shape=rectangle ]
node48 [label="
for.end:                                          ; preds = %for.cond1
  br label %for.inc13
",shape=rectangle ]
node47 [label="
for.body18:                                       ; preds = %for.cond16
  store i32 0, i32* %j, align 4
  br label %for.cond19
",shape=rectangle ]
node46 [label="
for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %j, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1
",shape=rectangle ]
node49 [label="
for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 100
  br i1 %cmp2, label %for.body3, label %for.end
",shape=rectangle ]
node35 [label="
for.end33:                                        ; preds = %for.cond16
  store i32 0, i32* %i, align 4
  br label %for.cond34
",shape=rectangle ]
node45 [label="
for.end15:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond16
",shape=rectangle ]
node50 [label="
for.body3:                                        ; preds = %for.cond1
  %call4 = call i32 @rand() #3
  %rem = srem i32 %call4, 10
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* %a, i64 0, i64 %idxprom
  %3 = load i32, i32* %j, align 4
  %idxprom5 = sext i32 %3 to i64
  %arrayidx6 = getelementptr inbounds [100 x i32], [100 x i32]* %arrayidx, i64 0, i64 %idxprom5
  store i32 %rem, i32* %arrayidx6, align 4
  %call7 = call i32 @rand() #3
  %rem8 = srem i32 %call7, 10
  %4 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %4 to i64
  %arrayidx10 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* %b, i64 0, i64 %idxprom9
  %5 = load i32, i32* %j, align 4
  %idxprom11 = sext i32 %5 to i64
  %arrayidx12 = getelementptr inbounds [100 x i32], [100 x i32]* %arrayidx10, i64 0, i64 %idxprom11
  store i32 %rem8, i32* %arrayidx12, align 4
  br label %for.inc
",shape=rectangle ]
node34 [label="
for.cond19:                                       ; preds = %for.inc28, %for.body18
  %9 = load i32, i32* %j, align 4
  %cmp20 = icmp slt i32 %9, 100
  br i1 %cmp20, label %for.body21, label %for.end30
",shape=rectangle ]
node33 [label="
for.end30:                                        ; preds = %for.cond19
  br label %for.inc31
",shape=rectangle ]
node54 [label="
for.inc31:                                        ; preds = %for.end30
  %15 = load i32, i32* %i, align 4
  %inc32 = add nsw i32 %15, 1
  store i32 %inc32, i32* %i, align 4
  br label %for.cond16
",shape=rectangle ]
node40 [label="
for.end52:                                        ; preds = %for.cond34
  ret i32 0
",shape=rectangle ]
node32 [label="
for.body21:                                       ; preds = %for.cond19
  %arraydecay = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* %a, i32 0, i32 0
  %arraydecay22 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* %b, i32 0, i32 0
  %10 = load i32, i32* %i, align 4
  %11 = load i32, i32* %j, align 4
  %call23 = call i32 @_Z27matrix_get_mult_element_axbPA100_iS0_ii([100 x i32]* %arraydecay, [100 x i32]* %arraydecay22, i32 %10, i32 %11)
  %12 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %12 to i64
  %arrayidx25 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* %c, i64 0, i64 %idxprom24
  %13 = load i32, i32* %j, align 4
  %idxprom26 = sext i32 %13 to i64
  %arrayidx27 = getelementptr inbounds [100 x i32], [100 x i32]* %arrayidx25, i64 0, i64 %idxprom26
  store i32 %call23, i32* %arrayidx27, align 4
  br label %for.inc28
",shape=rectangle ]
node30 [label="
for.end48:                                        ; preds = %for.cond37
  %call49 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0))
  br label %for.inc50
",shape=rectangle ]
node38 [label="
for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37
",shape=rectangle ]
node36 [label="
for.body39:                                       ; preds = %for.cond37
  %18 = load i32, i32* %i, align 4
  %idxprom40 = sext i32 %18 to i64
  %arrayidx41 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* %c, i64 0, i64 %idxprom40
  %19 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %19 to i64
  %arrayidx43 = getelementptr inbounds [100 x i32], [100 x i32]* %arrayidx41, i64 0, i64 %idxprom42
  %20 = load i32, i32* %arrayidx43, align 4
  %call44 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %20)
  %call45 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %call44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0))
  br label %for.inc46
",shape=rectangle ]
node31 [label="
for.inc28:                                        ; preds = %for.body21
  %14 = load i32, i32* %j, align 4
  %inc29 = add nsw i32 %14, 1
  store i32 %inc29, i32* %j, align 4
  br label %for.cond19
",shape=rectangle ]
node39 [label="
for.cond37:                                       ; preds = %for.inc46, %for.body36
  %17 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %17, 100
  br i1 %cmp38, label %for.body39, label %for.end48
",shape=rectangle ]
node44 [label="
for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1
",shape=rectangle ]
node37 [label="
for.inc50:                                        ; preds = %for.end48
  %22 = load i32, i32* %i, align 4
  %inc51 = add nsw i32 %22, 1
  store i32 %inc51, i32* %i, align 4
  br label %for.cond34
",shape=rectangle ]
node41 [label="
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %a = alloca [100 x [100 x i32]], align 16
  %b = alloca [100 x [100 x i32]], align 16
  %c = alloca [100 x [100 x i32]], align 16
  store i32 0, i32* %retval, align 4
  %call = call i64 @time(i64* null) #3
  %conv = trunc i64 %call to i32
  call void @srand(i32 %conv) #3
  store i32 0, i32* %i, align 4
  br label %for.cond
",shape=rectangle ]
node43 [label="
for.inc13:                                        ; preds = %for.end
  %7 = load i32, i32* %i, align 4
  %inc14 = add nsw i32 %7, 1
  store i32 %inc14, i32* %i, align 4
  br label %for.cond
",shape=rectangle ]
node42 [label="
for.cond:                                         ; preds = %for.inc13, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 100
  br i1 %cmp, label %for.body, label %for.end15
",shape=rectangle ]

node42->node43 [ ]
node52->node54 [ ]
node49->node46 [ ]
node52->node33 [ ]
node49->node50 [ ]
node34->node32 [ ]
node42->node42 [ ]
node34->node34 [ ]
node53->node53 [ ]
node42->node48 [ ]
node53->node37 [ ]
node39->node51 [ ]
node52->node47 [ ]
node34->node31 [ ]
node39->node36 [ ]
node53->node30 [ ]
node52->node34 [ ]
node39->node39 [ ]
node52->node52 [ ]
node53->node39 [ ]
node49->node49 [ ]
node53->node38 [ ]
node42->node44 [ ]
node42->node49 [ ]


}
