
digraph G {


node44 [label="[26/27]
for.inc36:                                        ; preds = %for.body23
  %18 = load i32, i32* %j20, align 4
  %inc37 = add nsw i32 %18, 1
  store i32 %inc37, i32* %j20, align 4
  br label %for.cond21
",shape=rectangle ]
node39 [label="[7/8]
for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %j, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1
",shape=rectangle ]
node43 [label="[23/28]
for.cond21:                                       ; preds = %for.inc36, %for.body19
  %9 = load i32, i32* %j20, align 4
  %cmp22 = icmp slt i32 %9, 100
  br i1 %cmp22, label %for.body23, label %for.end38
",shape=rectangle ]
node41 [label="[24/25]
for.body23:                                       ; preds = %for.cond21
  %10 = load i32, i32* %i16, align 4
  %idxprom24 = sext i32 %10 to i64
  %arrayidx25 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* %a, i64 0, i64 %idxprom24
  %11 = load i32, i32* %j20, align 4
  %idxprom26 = sext i32 %11 to i64
  %arrayidx27 = getelementptr inbounds [100 x i32], [100 x i32]* %arrayidx25, i64 0, i64 %idxprom26
  %12 = load i32, i32* %arrayidx27, align 4
  %13 = load i32, i32* %i16, align 4
  %idxprom28 = sext i32 %13 to i64
  %arrayidx29 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* %b, i64 0, i64 %idxprom28
  %14 = load i32, i32* %j20, align 4
  %idxprom30 = sext i32 %14 to i64
  %arrayidx31 = getelementptr inbounds [100 x i32], [100 x i32]* %arrayidx29, i64 0, i64 %idxprom30
  %15 = load i32, i32* %arrayidx31, align 4
  %add = add nsw i32 %12, %15
  %16 = load i32, i32* %i16, align 4
  %idxprom32 = sext i32 %16 to i64
  %arrayidx33 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* %c, i64 0, i64 %idxprom32
  %17 = load i32, i32* %j20, align 4
  %idxprom34 = sext i32 %17 to i64
  %arrayidx35 = getelementptr inbounds [100 x i32], [100 x i32]* %arrayidx33, i64 0, i64 %idxprom34
  store i32 %add, i32* %arrayidx35, align 4
  br label %for.inc36
",shape=rectangle ]
node53 [label="[2/3]
for.end15:                                        ; preds = %for.cond
  store i32 0, i32* %i16, align 4
  br label %for.cond17
",shape=rectangle ]
node42 [label="[15/16]
for.inc13:                                        ; preds = %for.end
  %7 = load i32, i32* %i, align 4
  %inc14 = add nsw i32 %7, 1
  store i32 %inc14, i32* %i, align 4
  br label %for.cond
",shape=rectangle ]
node48 [label="[30/31]
entry:
  %retval = alloca i32, align 4
  %a = alloca [100 x [100 x i32]], align 16
  %b = alloca [100 x [100 x i32]], align 16
  %c = alloca [100 x [100 x i32]], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i16 = alloca i32, align 4
  %j20 = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  %call = call i64 @time(i64* null) #3
  %conv = trunc i64 %call to i32
  call void @srand(i32 %conv) #3
  store i32 0, i32* %i, align 4
  br label %for.cond
",shape=rectangle ]
node49 [label="[18/19]
for.end38:                                        ; preds = %for.cond21
  br label %for.inc39
",shape=rectangle ]
node45 [label="[0/1]
for.inc39:                                        ; preds = %for.end38
  %19 = load i32, i32* %i16, align 4
  %inc40 = add nsw i32 %19, 1
  store i32 %inc40, i32* %i16, align 4
  br label %for.cond17
",shape=rectangle ]
node55 [label="[4/9]
for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 100
  br i1 %cmp2, label %for.body3, label %for.end
",shape=rectangle ]
node46 [label="[20/29]
for.cond17:                                       ; preds = %for.inc39, %for.end15
  %8 = load i32, i32* %i16, align 4
  %cmp18 = icmp slt i32 %8, 100
  br i1 %cmp18, label %for.body19, label %for.end41
",shape=rectangle ]
node47 [label="[32/33]
for.end41:                                        ; preds = %for.cond17
  ret i32 0
",shape=rectangle ]
node50 [label="[12/17]
for.cond:                                         ; preds = %for.inc13, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 100
  br i1 %cmp, label %for.body, label %for.end15
",shape=rectangle ]
node51 [label="[13/14]
for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1
",shape=rectangle ]
node52 [label="[5/6]
for.body3:                                        ; preds = %for.cond1
  %call4 = call i32 @rand() #3
  %rem = srem i32 %call4, 10
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* %a, i64 0, i64 %idxprom
  %3 = load i32, i32* %j, align 4
  %idxprom5 = sext i32 %3 to i64
  %arrayidx6 = getelementptr inbounds [100 x i32], [100 x i32]* %arrayidx, i64 0, i64 %idxprom5
  store i32 %rem, i32* %arrayidx6, align 4
  %call7 = call i32 @rand() #3
  %rem8 = srem i32 %call7, 10
  %4 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %4 to i64
  %arrayidx10 = getelementptr inbounds [100 x [100 x i32]], [100 x [100 x i32]]* %b, i64 0, i64 %idxprom9
  %5 = load i32, i32* %j, align 4
  %idxprom11 = sext i32 %5 to i64
  %arrayidx12 = getelementptr inbounds [100 x i32], [100 x i32]* %arrayidx10, i64 0, i64 %idxprom11
  store i32 %rem8, i32* %arrayidx12, align 4
  br label %for.inc
",shape=rectangle ]
node40 [label="[21/22]
for.body19:                                       ; preds = %for.cond17
  store i32 0, i32* %j20, align 4
  br label %for.cond21
",shape=rectangle ]
node54 [label="[10/11]
for.end:                                          ; preds = %for.cond1
  br label %for.inc13
",shape=rectangle ]

node46->node43 [ ]
node46->node49 [ ]
node50->node55 [ ]
node43->node44 [ ]
node46->node45 [ ]
node55->node52 [ ]
node46->node40 [ ]
node55->node39 [ ]
node50->node54 [ ]
node50->node51 [ ]
node50->node42 [ ]
node43->node41 [ ]


}
