
digraph G {


node1265 [fillcolor=grey,label="[31/32]  %next6 = getelementptr inbounds %struct.list_node, %struct.list_node* %14, i32 0, i32 1",shape=rectangle,style=filled ]
node1263 [fillcolor=grey,label="[12/13]  %cmp7 = icmp ne %struct.list_node* %15, null",shape=rectangle,style=filled ]
node1249 [fillcolor=lightcoral,label="[30/33]  %14 = load %struct.list_node*, %struct.list_node** %list_it, align 8",shape=ellipse,style=filled ]
node1244 [fillcolor=lemonchiffon,label="[16/17]  br i1 %cmp10, label %if.then, label %if.end",shape=ellipse,style=filled ]
node1245 [fillcolor=lemonchiffon,label="[42/43]  br label %delete.end",shape=ellipse,style=filled ]
node1247 [fillcolor=grey,label="[15/18]  %cmp10 = icmp ne %struct.list_node* %19, %begin",shape=rectangle,style=filled ]
node1261 [fillcolor=lightcoral,label="[14/19]  %19 = load %struct.list_node*, %struct.list_node** %prev_it, align 8",shape=ellipse,style=filled ]
node1254 [fillcolor=lightcoral,label="[36/39]  %18 = load %struct.list_node*, %struct.list_node** %next9, align 8",shape=ellipse,style=filled ]
node1257 [fillcolor=grey,label="[35/40]  %next9 = getelementptr inbounds %struct.list_node, %struct.list_node* %17, i32 0, i32 1",shape=rectangle,style=filled ]
node1248 [fillcolor=lightcoral,label="[27/28]  store %struct.list_node* %16, %struct.list_node** %prev_it, align 8",shape=ellipse,style=filled ]
node1250 [fillcolor=lightcoral,label="[34/41]  %17 = load %struct.list_node*, %struct.list_node** %list_it, align 8",shape=ellipse,style=filled ]
node1259 [fillcolor=lightcoral,label="[24/25]  %15 = load %struct.list_node*, %struct.list_node** %next6, align 8",shape=ellipse,style=filled ]
node1260 [fillcolor=lightcoral,label="[20/23]  %20 = load %struct.list_node*, %struct.list_node** %prev_it, align 8",shape=ellipse,style=filled ]
node1251 [fillcolor=lemonchiffon,label="[8/9]  br i1 %cmp7, label %while.body8, label %while.end11",shape=ellipse,style=filled ]
node1262 [fillcolor=grey,label="[10/11]  %21 = bitcast %struct.list_node* %20 to i8*",shape=rectangle,style=filled ]
node1252 [fillcolor=lemonchiffon,label="[0/1]  br label %while.cond5",shape=ellipse,style=filled ]
node1264 [fillcolor=grey,label="[21/22]  %isnull = icmp eq %struct.list_node* %20, null",shape=rectangle,style=filled ]
node1246 [fillcolor=lightcoral,label="[37/38]  store %struct.list_node* %18, %struct.list_node** %list_it, align 8",shape=ellipse,style=filled ]
node1258 [fillcolor=lightcoral,label="[26/29]  %16 = load %struct.list_node*, %struct.list_node** %list_it, align 8",shape=ellipse,style=filled ]
node1253 [fillcolor=lemonchiffon,label="[6/7]  br i1 %isnull, label %delete.end, label %delete.notnull",shape=ellipse,style=filled ]
node1255 [fillcolor=lightcoral,label="[4/5]  call void @_ZdlPv(i8* %21) #9",shape=ellipse,style=filled ]
node1256 [fillcolor=lemonchiffon,label="[2/3]  br label %if.end",shape=ellipse,style=filled ]

node1259->node1263 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1261->node1247 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1257->node1254 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1258->node1248 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1254->node1246 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1249->node1265 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1265->node1259 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1263->node1251 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1260->node1262 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1262->node1255 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1264->node1253 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1247->node1244 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1260->node1264 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1250->node1257 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]


}
