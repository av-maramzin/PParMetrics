
digraph G {


node120 [label="
if.end:                                           ; preds = %delete.end, %while.body8
  br label %while.cond5
",shape=rectangle ]
node119 [label="
while.body8:                                      ; preds = %while.cond5
  %16 = load %struct.list_node*, %struct.list_node** %list_it, align 8
  store %struct.list_node* %16, %struct.list_node** %prev_it, align 8
  %17 = load %struct.list_node*, %struct.list_node** %list_it, align 8
  %next9 = getelementptr inbounds %struct.list_node, %struct.list_node* %17, i32 0, i32 1
  %18 = load %struct.list_node*, %struct.list_node** %next9, align 8
  store %struct.list_node* %18, %struct.list_node** %list_it, align 8
  %19 = load %struct.list_node*, %struct.list_node** %prev_it, align 8
  %cmp10 = icmp ne %struct.list_node* %19, %begin
  br i1 %cmp10, label %if.then, label %if.end
",shape=rectangle ]
node118 [label="
if.then:                                          ; preds = %while.body8
  %20 = load %struct.list_node*, %struct.list_node** %prev_it, align 8
  %isnull = icmp eq %struct.list_node* %20, null
  br i1 %isnull, label %delete.end, label %delete.notnull
",shape=rectangle ]
node117 [label="
delete.end:                                       ; preds = %delete.notnull, %if.then
  br label %if.end
",shape=rectangle ]
node115 [label="
while.cond5:                                      ; preds = %if.end, %while.end
  %14 = load %struct.list_node*, %struct.list_node** %list_it, align 8
  %next6 = getelementptr inbounds %struct.list_node, %struct.list_node* %14, i32 0, i32 1
  %15 = load %struct.list_node*, %struct.list_node** %next6, align 8
  %cmp7 = icmp ne %struct.list_node* %15, null
  br i1 %cmp7, label %while.body8, label %while.end11
",shape=rectangle ]
node116 [label="
delete.notnull:                                   ; preds = %if.then
  %21 = bitcast %struct.list_node* %20 to i8*
  call void @_ZdlPv(i8* %21) #9
  br label %delete.end
",shape=rectangle ]

node115->node120 [ ]
node115->node119 [ ]
node119->node117 [ ]
node118->node116 [ ]
node119->node118 [ ]
node115->node115 [ ]


}
