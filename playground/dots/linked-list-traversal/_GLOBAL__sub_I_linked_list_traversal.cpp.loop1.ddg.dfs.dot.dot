
digraph G {


node1242 [fillcolor=grey,label="[13/16]  %cmp10 = icmp ne %struct.list_node* %19, %begin",shape=rectangle,style=filled ]
node1241 [fillcolor=lightcoral,label="[21/22]  store %struct.list_node* %16, %struct.list_node** %prev_it, align 8",shape=ellipse,style=filled ]
node1240 [fillcolor=lightcoral,label="[32/35]  %18 = load %struct.list_node*, %struct.list_node** %next9, align 8",shape=ellipse,style=filled ]
node1239 [fillcolor=grey,label="[31/36]  %next9 = getelementptr inbounds %struct.list_node, %struct.list_node* %17, i32 0, i32 1",shape=rectangle,style=filled ]
node1238 [fillcolor=lemonchiffon,label="[14/15]  br i1 %cmp10, label %if.then, label %if.end",shape=ellipse,style=filled ]
node1227 [fillcolor=lemonchiffon,label="[10/11]  br label %if.end",shape=ellipse,style=filled ]
node1224 [fillcolor=lemonchiffon,label="[4/5]  br i1 %cmp7, label %while.body8, label %while.end11",shape=ellipse,style=filled ]
node1233 [fillcolor=lightcoral,label="[30/37]  %17 = load %struct.list_node*, %struct.list_node** %list_it, align 8",shape=ellipse,style=filled ]
node1226 [fillcolor=grey,label="[8/9]  %cmp7 = icmp ne %struct.list_node* %15, null",shape=rectangle,style=filled ]
node1231 [fillcolor=lightcoral,label="[24/27]  %14 = load %struct.list_node*, %struct.list_node** %list_it, align 8",shape=ellipse,style=filled ]
node1222 [fillcolor=lightcoral,label="[0/1]  call void @_ZdlPv(i8* %21) #9",shape=ellipse,style=filled ]
node1225 [fillcolor=grey,label="[6/7]  %21 = bitcast %struct.list_node* %20 to i8*",shape=rectangle,style=filled ]
node1228 [fillcolor=lightcoral,label="[12/17]  %19 = load %struct.list_node*, %struct.list_node** %prev_it, align 8",shape=ellipse,style=filled ]
node1237 [fillcolor=grey,label="[25/26]  %next6 = getelementptr inbounds %struct.list_node, %struct.list_node* %14, i32 0, i32 1",shape=rectangle,style=filled ]
node1229 [fillcolor=lightcoral,label="[18/19]  %15 = load %struct.list_node*, %struct.list_node** %next6, align 8",shape=ellipse,style=filled ]
node1230 [fillcolor=lightcoral,label="[20/23]  %16 = load %struct.list_node*, %struct.list_node** %list_it, align 8",shape=ellipse,style=filled ]
node1243 [fillcolor=grey,label="[41/42]  %isnull = icmp eq %struct.list_node* %20, null",shape=rectangle,style=filled ]
node1234 [fillcolor=lemonchiffon,label="[38/39]  br label %delete.end",shape=ellipse,style=filled ]
node1232 [fillcolor=lemonchiffon,label="[28/29]  br label %while.cond5",shape=ellipse,style=filled ]
node1235 [fillcolor=lightcoral,label="[33/34]  store %struct.list_node* %18, %struct.list_node** %list_it, align 8",shape=ellipse,style=filled ]
node1223 [fillcolor=lemonchiffon,label="[2/3]  br i1 %isnull, label %delete.end, label %delete.notnull",shape=ellipse,style=filled ]
node1236 [fillcolor=lightcoral,label="[40/43]  %20 = load %struct.list_node*, %struct.list_node** %prev_it, align 8",shape=ellipse,style=filled ]

node1231->node1237 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1225->node1222 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1226->node1224 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1229->node1226 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1240->node1235 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1242->node1238 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1237->node1229 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1239->node1240 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1233->node1239 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1228->node1242 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1230->node1241 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1236->node1225 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1236->node1243 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]
node1243->node1223 [style=dotted,color=forestgreen,label="T",fontcolor=forestgreen ]


}
