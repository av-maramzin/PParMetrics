# mark_description "Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.0.117 Build 20180804";
# mark_description "-S -o /home/s1736883/Work/PParMetrics/playground/asm/debug-1/clang/debug-1.s.icc";
	.file "debug-1.cpp"
	.text
..TXTST0:
.L_2__routine_start_main_0:
# -- Begin  main
	.text
# mark_begin;
       .align    16,0x90
	.globl main
# --- main()
main:
..B1.1:                         # Preds ..B1.0
                                # Execution count [0.00e+00]
	.cfi_startproc
	.cfi_personality 0x3,__gxx_personality_v0
..___tag_value_main.1:
..L2:
                                                          #10.12
        pushq     %rbp                                          #10.12
	.cfi_def_cfa_offset 16
        movq      %rsp, %rbp                                    #10.12
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
        andq      $-128, %rsp                                   #10.12
        subq      $16000000, %rsp                               #10.12
        xorl      %esi, %esi                                    #10.12
        movl      $3, %edi                                      #10.12
        call      __intel_new_feature_proc_init                 #10.12
                                # LOE rbx r12 r13 r14 r15
..B1.8:                         # Preds ..B1.1
                                # Execution count [0.00e+00]
        stmxcsr   (%rsp)                                        #10.12
        xorl      %edx, %edx                                    #17.5
        pxor      %xmm0, %xmm0                                  #21.28
        orl       $32832, (%rsp)                                #10.12
        xorl      %eax, %eax                                    #17.5
        ldmxcsr   (%rsp)                                        #10.12
                                # LOE rax rdx rbx r12 r13 r14 r15 xmm0
..B1.2:                         # Preds ..B1.4 ..B1.8
                                # Execution count [1.00e+02]
        imulq     $80000, %rax, %rcx                            #19.28
        movq      %rdx, %r8                                     #18.9
        lea       (%rsp,%rcx), %rdi                             #19.28
        lea       8000000(%rsp,%rcx), %rsi                      #19.13
                                # LOE rax rdx rcx rbx rsi rdi r8 r12 r13 r14 r15 xmm0
..B1.3:                         # Preds ..B1.3 ..B1.2
                                # Execution count [1.00e+04]
        movups    (%rdi,%r8,8), %xmm1                           #19.28
        movups    16(%rdi,%r8,8), %xmm3                         #19.28
        movups    32(%rdi,%r8,8), %xmm5                         #19.28
        movups    48(%rdi,%r8,8), %xmm7                         #19.28
        movups    79200(%rdi,%r8,8), %xmm2                      #27.28
        movups    79216(%rdi,%r8,8), %xmm4                      #27.28
        movups    79232(%rdi,%r8,8), %xmm6                      #27.28
        movups    79248(%rdi,%r8,8), %xmm8                      #27.28
        movups    %xmm1, (%rsi,%r8,8)                           #19.13
        movups    %xmm0, 800(%rsi,%r8,8)                        #21.13
        movups    %xmm2, 1600(%rsi,%r8,8)                       #27.13
        movups    %xmm3, 16(%rsi,%r8,8)                         #19.13
        movups    %xmm0, 816(%rsi,%r8,8)                        #21.13
        movups    %xmm4, 1616(%rsi,%r8,8)                       #27.13
        movups    %xmm5, 32(%rsi,%r8,8)                         #19.13
        movups    %xmm0, 832(%rsi,%r8,8)                        #21.13
        movups    %xmm6, 1632(%rsi,%r8,8)                       #27.13
        movups    %xmm7, 48(%rsi,%r8,8)                         #19.13
        movups    %xmm0, 848(%rsi,%r8,8)                        #21.13
        movups    %xmm8, 1648(%rsi,%r8,8)                       #27.13
        addq      $8, %r8                                       #18.9
        cmpq      $96, %r8                                      #18.9
        jb        ..B1.3        # Prob 99%                      #18.9
                                # LOE rax rdx rcx rbx rsi rdi r8 r12 r13 r14 r15 xmm0
..B1.4:                         # Preds ..B1.3
                                # Execution count [2.50e+03]
        movq      768(%rsp,%rcx), %rsi                          #19.28
        incq      %rax                                          #17.5
        movq      79968(%rsp,%rcx), %rdi                        #27.28
        movq      %rsi, 8000768(%rsp,%rcx)                      #19.13
        movq      %rdi, 8002368(%rsp,%rcx)                      #27.13
        movq      776(%rsp,%rcx), %r8                           #19.28
        movq      784(%rsp,%rcx), %r10                          #19.28
        movq      792(%rsp,%rcx), %rsi                          #19.28
        movq      79976(%rsp,%rcx), %r9                         #27.28
        movq      79984(%rsp,%rcx), %r11                        #27.28
        movq      79992(%rsp,%rcx), %rdi                        #27.28
        movq      %rdx, 8001568(%rsp,%rcx)                      #21.13
        movq      %r8, 8000776(%rsp,%rcx)                       #19.13
        movq      %rdx, 8001576(%rsp,%rcx)                      #21.13
        movq      %r9, 8002376(%rsp,%rcx)                       #27.13
        movq      %r10, 8000784(%rsp,%rcx)                      #19.13
        movq      %rdx, 8001584(%rsp,%rcx)                      #21.13
        movq      %r11, 8002384(%rsp,%rcx)                      #27.13
        movq      %rsi, 8000792(%rsp,%rcx)                      #19.13
        movq      %rdx, 8001592(%rsp,%rcx)                      #21.13
        movq      %rdi, 8002392(%rsp,%rcx)                      #27.13
        cmpq      $100, %rax                                    #17.5
        jb        ..B1.2        # Prob 99%                      #17.5
                                # LOE rax rdx rbx r12 r13 r14 r15 xmm0
..B1.5:                         # Preds ..B1.4
                                # Execution count [1.00e+00]
        xorl      %eax, %eax                                    #39.12
        movq      %rbp, %rsp                                    #39.12
        popq      %rbp                                          #39.12
	.cfi_def_cfa 7, 8
	.cfi_restore 6
        ret                                                     #39.12
        .align    16,0x90
                                # LOE
	.cfi_endproc
# mark_end;
	.type	main,@function
	.size	main,.-main
..LNmain.0:
	.data
# -- End  main
	.text
.L_2__routine_start___sti__$E_1:
# -- Begin  __sti__$E
	.text
# mark_begin;
       .align    16,0x90
# --- __sti__$E()
__sti__$E:
..B2.1:                         # Preds ..B2.0
                                # Execution count [1.00e+00]
	.cfi_startproc
	.cfi_personality 0x3,__gxx_personality_v0
..___tag_value___sti__$E.9:
..L10:
                                                         #
        pushq     %rsi                                          #
	.cfi_def_cfa_offset 16
        movl      $_ZN17_INTERNAL245c32f9St8__ioinitE, %edi     #74.25
..___tag_value___sti__$E.12:
#       std::ios_base::Init::Init(std::ios_base::Init *)
        call      _ZNSt8ios_base4InitC1Ev                       #74.25
..___tag_value___sti__$E.13:
                                # LOE rbx rbp r12 r13 r14 r15
..B2.2:                         # Preds ..B2.1
                                # Execution count [1.00e+00]
        movl      $_ZNSt8ios_base4InitD1Ev, %edi                #74.25
        movl      $_ZN17_INTERNAL245c32f9St8__ioinitE, %esi     #74.25
        movl      $__dso_handle, %edx                           #74.25
        addq      $8, %rsp                                      #74.25
	.cfi_def_cfa_offset 8
#       __cxa_atexit(void (*)(void *), void *, void *)
        jmp       __cxa_atexit                                  #74.25
        .align    16,0x90
                                # LOE
	.cfi_endproc
# mark_end;
	.type	__sti__$E,@function
	.size	__sti__$E,.-__sti__$E
..LN__sti__$E.1:
	.data
# -- End  __sti__$E
	.bss
	.align 4
	.align 1
_ZN17_INTERNAL245c32f9St8__ioinitE:
	.type	_ZN17_INTERNAL245c32f9St8__ioinitE,@object
	.size	_ZN17_INTERNAL245c32f9St8__ioinitE,1
	.space 1	# pad
	.section .ctors, "wa"
	.align 8
__init_0:
	.type	__init_0,@object
	.size	__init_0,8
	.quad	__sti__$E
	.data
	.hidden __dso_handle
# mark_proc_addr_taken __sti__$E;
	.section .note.GNU-stack, ""
# End
