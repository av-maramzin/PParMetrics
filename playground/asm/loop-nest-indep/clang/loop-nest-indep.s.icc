# mark_description "Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.0.0.117 Build 20180804";
# mark_description "-S -o /home/s1736883/Work/PParMetrics/playground/asm/loop-nest-indep/clang/loop-nest-indep.s.icc";
	.file "loop-nest-indep.cpp"
	.text
..TXTST0:
.L_2__routine_start_main_0:
# -- Begin  main
	.text
# mark_begin;
       .align    16,0x90
	.globl main
# --- main()
main:
..B1.1:                         # Preds ..B1.0
                                # Execution count [1.00e+00]
	.cfi_startproc
	.cfi_personality 0x3,__gxx_personality_v0
..___tag_value_main.1:
..L2:
                                                          #9.12
        pushq     %rbp                                          #9.12
	.cfi_def_cfa_offset 16
        movq      %rsp, %rbp                                    #9.12
	.cfi_def_cfa 6, 16
	.cfi_offset 6, -16
        andq      $-128, %rsp                                   #9.12
        subq      $20096, %rsp                                  #9.12
        xorl      %esi, %esi                                    #9.12
        movl      $3, %edi                                      #9.12
        call      __intel_new_feature_proc_init                 #9.12
                                # LOE rbx r12 r13 r14 r15
..B1.6:                         # Preds ..B1.1
                                # Execution count [1.00e+00]
        stmxcsr   (%rsp)                                        #9.12
        xorl      %r9d, %r9d                                    #14.5
        xorl      %edi, %edi                                    #14.5
        orl       $32832, (%rsp)                                #9.12
        ldmxcsr   (%rsp)                                        #9.12
                                # LOE rbx rdi r12 r13 r14 r15 r9d
..B1.2:                         # Preds ..B1.2 ..B1.6
                                # Execution count [1.00e+02]
        movl      $1431655766, %eax                             #19.31
        lea       1(%r9), %r8d                                  #19.28
        imull     %r8d                                          #19.31
        movl      $1431655766, %eax                             #19.31
        lea       2(%r9), %r10d                                 #19.28
        addl      %edx, 4(%rsp,%rdi)                            #20.43
        lea       3(%r9), %esi                                  #19.28
        imull     %r10d                                         #19.31
        movl      $1431655766, %eax                             #19.31
        movl      %edx, %ecx                                    #19.31
        imull     %esi                                          #19.31
        movl      $1431655766, %eax                             #19.31
        lea       4(%r9), %r11d                                 #19.28
        movl      %edx, %esi                                    #19.31
        imull     %r11d                                         #19.31
        addl      %ecx, 8(%rsp,%rdi)                            #20.43
        movl      $1431655766, %eax                             #19.31
        addl      %ecx, 24(%rsp,%rdi)                           #20.43
        lea       5(%r9), %ecx                                  #19.28
        movl      %edx, %r10d                                   #19.31
        imull     %ecx                                          #19.31
        movl      %edx, %r11d                                   #19.31
        lea       6(%r9), %edx                                  #19.28
        movl      $1431655766, %eax                             #19.31
        imull     %edx                                          #19.31
        addl      %r10d, 16(%rsp,%rdi)                          #20.43
        movl      $1431655766, %eax                             #19.31
        addl      %r10d, 32(%rsp,%rdi)                          #20.43
        addl      %r10d, 48(%rsp,%rdi)                          #20.43
        addl      %r10d, 64(%rsp,%rdi)                          #20.43
        lea       7(%r9), %r10d                                 #19.28
        addl      %esi, 12(%rsp,%rdi)                           #20.43
        addl      %esi, 28(%rsp,%rdi)                           #20.43
        addl      %esi, 44(%rsp,%rdi)                           #20.43
        movl      %edx, %esi                                    #19.31
        imull     %r10d                                         #19.31
        addl      %r11d, 36(%rsp,%rdi)                          #20.43
        movl      $1431655766, %eax                             #19.31
        addl      %r11d, 52(%rsp,%rdi)                          #20.43
        movl      %edx, %ecx                                    #19.31
        addl      %r11d, 68(%rsp,%rdi)                          #20.43
        addl      %r11d, 84(%rsp,%rdi)                          #20.43
        lea       8(%r9), %r11d                                 #19.28
        imull     %r11d                                         #19.31
        addl      %esi, 56(%rsp,%rdi)                           #20.43
        movl      $1431655766, %eax                             #19.31
        addl      %esi, 72(%rsp,%rdi)                           #20.43
        movl      %edx, %r11d                                   #19.31
        addl      %esi, 88(%rsp,%rdi)                           #20.43
        addl      %esi, 104(%rsp,%rdi)                          #20.43
        lea       9(%r9), %esi                                  #19.28
        imull     %esi                                          #19.31
        addl      %ecx, 76(%rsp,%rdi)                           #20.43
        movl      $1431655766, %eax                             #19.31
        addl      %ecx, 92(%rsp,%rdi)                           #20.43
        movl      %edx, %esi                                    #19.31
        addl      %ecx, 108(%rsp,%rdi)                          #20.43
        addl      %ecx, 124(%rsp,%rdi)                          #20.43
        lea       10(%r9), %ecx                                 #19.28
        imull     %ecx                                          #19.31
        movl      %edx, %r10d                                   #19.31
        lea       11(%r9), %edx                                 #19.28
        movl      $1431655766, %eax                             #19.31
        imull     %edx                                          #19.31
        movl      %edx, %ecx                                    #19.31
        lea       12(%r9), %edx                                 #19.28
        movl      $1431655766, %eax                             #19.31
        addl      $13, %r9d                                     #19.28
        imull     %edx                                          #19.31
        movl      $1431655766, %eax                             #19.31
        addl      %edx, 176(%rsp,%rdi)                          #20.43
        addl      %edx, 192(%rsp,%rdi)                          #20.43
        imull     %r9d                                          #19.31
        movl      %r8d, %r9d                                    #14.5
        addl      %r11d, 128(%rsp,%rdi)                         #20.43
        addl      %r11d, 96(%rsp,%rdi)                          #20.43
        addl      %r11d, 112(%rsp,%rdi)                         #20.43
        addl      %esi, 116(%rsp,%rdi)                          #20.43
        addl      %esi, 132(%rsp,%rdi)                          #20.43
        addl      %r10d, 136(%rsp,%rdi)                         #20.43
        addl      %r11d, 144(%rsp,%rdi)                         #20.43
        addl      %esi, 148(%rsp,%rdi)                          #20.43
        addl      %r10d, 152(%rsp,%rdi)                         #20.43
        addl      %ecx, 156(%rsp,%rdi)                          #20.43
        addl      %esi, 164(%rsp,%rdi)                          #20.43
        addl      %r10d, 168(%rsp,%rdi)                         #20.43
        addl      %ecx, 172(%rsp,%rdi)                          #20.43
        addl      %r10d, 184(%rsp,%rdi)                         #20.43
        addl      %ecx, 188(%rsp,%rdi)                          #20.43
        addl      %edx, 196(%rsp,%rdi)                          #20.43
        addq      $200, %rdi                                    #14.5
        cmpl      $100, %r9d                                    #14.5
        jb        ..B1.2        # Prob 99%                      #14.5
                                # LOE rbx rdi r12 r13 r14 r15 r9d
..B1.3:                         # Preds ..B1.2
                                # Execution count [1.00e+00]
        xorl      %eax, %eax                                    #25.12
        movq      %rbp, %rsp                                    #25.12
        popq      %rbp                                          #25.12
	.cfi_def_cfa 7, 8
	.cfi_restore 6
        ret                                                     #25.12
        .align    16,0x90
                                # LOE
	.cfi_endproc
# mark_end;
	.type	main,@function
	.size	main,.-main
..LNmain.0:
	.data
# -- End  main
	.text
.L_2__routine_start___sti__$E_1:
# -- Begin  __sti__$E
	.text
# mark_begin;
       .align    16,0x90
# --- __sti__$E()
__sti__$E:
..B2.1:                         # Preds ..B2.0
                                # Execution count [1.00e+00]
	.cfi_startproc
	.cfi_personality 0x3,__gxx_personality_v0
..___tag_value___sti__$E.9:
..L10:
                                                         #
        pushq     %rsi                                          #
	.cfi_def_cfa_offset 16
        movl      $_ZN17_INTERNALb6ab35b7St8__ioinitE, %edi     #74.25
..___tag_value___sti__$E.12:
#       std::ios_base::Init::Init(std::ios_base::Init *)
        call      _ZNSt8ios_base4InitC1Ev                       #74.25
..___tag_value___sti__$E.13:
                                # LOE rbx rbp r12 r13 r14 r15
..B2.2:                         # Preds ..B2.1
                                # Execution count [1.00e+00]
        movl      $_ZNSt8ios_base4InitD1Ev, %edi                #74.25
        movl      $_ZN17_INTERNALb6ab35b7St8__ioinitE, %esi     #74.25
        movl      $__dso_handle, %edx                           #74.25
        addq      $8, %rsp                                      #74.25
	.cfi_def_cfa_offset 8
#       __cxa_atexit(void (*)(void *), void *, void *)
        jmp       __cxa_atexit                                  #74.25
        .align    16,0x90
                                # LOE
	.cfi_endproc
# mark_end;
	.type	__sti__$E,@function
	.size	__sti__$E,.-__sti__$E
..LN__sti__$E.1:
	.data
# -- End  __sti__$E
	.bss
	.align 4
	.align 1
_ZN17_INTERNALb6ab35b7St8__ioinitE:
	.type	_ZN17_INTERNALb6ab35b7St8__ioinitE,@object
	.size	_ZN17_INTERNALb6ab35b7St8__ioinitE,1
	.space 1	# pad
	.section .ctors, "wa"
	.align 8
__init_0:
	.type	__init_0,@object
	.size	__init_0,8
	.quad	__sti__$E
	.data
	.hidden __dso_handle
# mark_proc_addr_taken __sti__$E;
	.section .note.GNU-stack, ""
# End
