	.file	"loop-nest-indep.cpp"
	.section	.rodata
	.type	_ZStL19piecewise_construct, @object
	.size	_ZStL19piecewise_construct, 1
_ZStL19piecewise_construct:
	.zero	1
	.local	_ZStL8__ioinit
	.comm	_ZStL8__ioinit,1,1
	.align 4
	.type	_ZL6size_i, @object
	.size	_ZL6size_i, 4
_ZL6size_i:
	.long	100
	.align 4
	.type	_ZL6size_j, @object
	.size	_ZL6size_j, 4
_ZL6size_j:
	.long	10
	.align 4
	.type	_ZL6size_k, @object
	.size	_ZL6size_k, 4
_ZL6size_k:
	.long	5
	.text
	.globl	main
	.type	main, @function
main:
.LFB1490:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$20048, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$0, -20040(%rbp)
.L7:
	cmpl	$99, -20040(%rbp)
	jg	.L2
	movl	$0, -20036(%rbp)
.L6:
	cmpl	$9, -20036(%rbp)
	jg	.L3
	movl	$0, -20032(%rbp)
.L5:
	cmpl	$4, -20032(%rbp)
	jg	.L4
	call	rand
	movl	%eax, %ecx
	movl	$1717986919, %edx
	movl	%ecx, %eax
	imull	%edx
	sarl	$2, %edx
	movl	%ecx, %eax
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	addl	%eax, %eax
	subl	%eax, %ecx
	movl	%ecx, %edx
	movl	-20032(%rbp), %eax
	movslq	%eax, %rdi
	movl	-20040(%rbp), %eax
	movslq	%eax, %rcx
	movl	-20036(%rbp), %eax
	movslq	%eax, %rsi
	movq	%rcx, %rax
	salq	$2, %rax
	addq	%rcx, %rax
	leaq	0(,%rax,4), %rcx
	addq	%rcx, %rax
	addq	%rax, %rax
	movq	%rsi, %rcx
	salq	$2, %rcx
	addq	%rsi, %rcx
	addq	%rcx, %rax
	addq	%rdi, %rax
	movl	%edx, -20016(%rbp,%rax,4)
	addl	$1, -20032(%rbp)
	jmp	.L5
.L4:
	addl	$1, -20036(%rbp)
	jmp	.L6
.L3:
	addl	$1, -20040(%rbp)
	jmp	.L7
.L2:
	movl	$0, -20028(%rbp)
.L13:
	cmpl	$99, -20028(%rbp)
	jg	.L8
	movl	-20028(%rbp), %eax
	movl	%eax, -20024(%rbp)
.L12:
	cmpl	$9, -20024(%rbp)
	jg	.L9
	movl	$1, -20020(%rbp)
.L11:
	cmpl	$4, -20020(%rbp)
	jg	.L10
	movl	-20020(%rbp), %eax
	movslq	%eax, %rsi
	movl	-20028(%rbp), %eax
	movslq	%eax, %rdx
	movl	-20024(%rbp), %eax
	movslq	%eax, %rcx
	movq	%rdx, %rax
	salq	$2, %rax
	addq	%rdx, %rax
	leaq	0(,%rax,4), %rdx
	addq	%rdx, %rax
	addq	%rax, %rax
	movq	%rcx, %rdx
	salq	$2, %rdx
	addq	%rcx, %rdx
	addq	%rdx, %rax
	addq	%rsi, %rax
	movl	-20016(%rbp,%rax,4), %eax
	leal	1(%rax), %esi
	movl	-20020(%rbp), %eax
	movslq	%eax, %rdi
	movl	-20028(%rbp), %eax
	movslq	%eax, %rdx
	movl	-20024(%rbp), %eax
	movslq	%eax, %rcx
	movq	%rdx, %rax
	salq	$2, %rax
	addq	%rdx, %rax
	leaq	0(,%rax,4), %rdx
	addq	%rdx, %rax
	addq	%rax, %rax
	movq	%rcx, %rdx
	salq	$2, %rdx
	addq	%rcx, %rdx
	addq	%rdx, %rax
	addq	%rdi, %rax
	movl	%esi, -20016(%rbp,%rax,4)
	addl	$1, -20020(%rbp)
	jmp	.L11
.L10:
	addl	$1, -20024(%rbp)
	jmp	.L12
.L9:
	addl	$1, -20028(%rbp)
	jmp	.L13
.L8:
	movl	$0, %eax
	movq	-8(%rbp), %rdi
	xorq	%fs:40, %rdi
	je	.L15
	call	__stack_chk_fail
.L15:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1490:
	.size	main, .-main
	.type	_Z41__static_initialization_and_destruction_0ii, @function
_Z41__static_initialization_and_destruction_0ii:
.LFB1971:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	%edi, -4(%rbp)
	movl	%esi, -8(%rbp)
	cmpl	$1, -4(%rbp)
	jne	.L18
	cmpl	$65535, -8(%rbp)
	jne	.L18
	movl	$_ZStL8__ioinit, %edi
	call	_ZNSt8ios_base4InitC1Ev
	movl	$__dso_handle, %edx
	movl	$_ZStL8__ioinit, %esi
	movl	$_ZNSt8ios_base4InitD1Ev, %edi
	call	__cxa_atexit
.L18:
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1971:
	.size	_Z41__static_initialization_and_destruction_0ii, .-_Z41__static_initialization_and_destruction_0ii
	.type	_GLOBAL__sub_I_main, @function
_GLOBAL__sub_I_main:
.LFB1972:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	movl	$65535, %esi
	movl	$1, %edi
	call	_Z41__static_initialization_and_destruction_0ii
	popq	%rbp
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1972:
	.size	_GLOBAL__sub_I_main, .-_GLOBAL__sub_I_main
	.section	.init_array,"aw"
	.align 8
	.quad	_GLOBAL__sub_I_main
	.hidden	__dso_handle
	.ident	"GCC: (Ubuntu 7.2.0-1ubuntu1~16.04) 7.2.0"
	.section	.note.GNU-stack,"",@progbits
