digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname=helvetica] ;
edge [fontname=helvetica] ;
0 [label="payload-getelemptr-fraction <= 0.104\ngini = 0.431\nsamples = 937\nvalue = [294, 643]\nclass = parallelizable", fillcolor="#399de58a"] ;
1 [label="iterator-branch-fraction <= 0.17\ngini = 0.206\nsamples = 120\nvalue = [106, 14]\nclass = non-parallelizable", fillcolor="#e58139dd"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="iterator-getelemptr-fraction <= 0.174\ngini = 0.467\nsamples = 35\nvalue = [22, 13]\nclass = non-parallelizable", fillcolor="#e5813968"] ;
1 -> 2 ;
3 [label="iterator-mem-read-fraction <= 0.216\ngini = 0.444\nsamples = 12\nvalue = [4, 8]\nclass = parallelizable", fillcolor="#399de57f"] ;
2 -> 3 ;
4 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 4 ;
9 [label="(...)", fillcolor="#C0C0C0"] ;
3 -> 9 ;
10 [label="iterator-true-dependencies-number <= 17.0\ngini = 0.34\nsamples = 23\nvalue = [18, 5]\nclass = non-parallelizable", fillcolor="#e58139b8"] ;
2 -> 10 ;
11 [label="(...)", fillcolor="#C0C0C0"] ;
10 -> 11 ;
16 [label="(...)", fillcolor="#C0C0C0"] ;
10 -> 16 ;
23 [label="payload-mem-dependencies-number-diff <= 12.0\ngini = 0.023\nsamples = 85\nvalue = [84, 1]\nclass = non-parallelizable", fillcolor="#e58139fc"] ;
1 -> 23 ;
24 [label="gini = 0.0\nsamples = 84\nvalue = [84, 0]\nclass = non-parallelizable", fillcolor="#e58139ff"] ;
23 -> 24 ;
25 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1]\nclass = parallelizable", fillcolor="#399de5ff"] ;
23 -> 25 ;
26 [label="payload-call-fraction <= 0.001\ngini = 0.354\nsamples = 817\nvalue = [188, 629]\nclass = parallelizable", fillcolor="#399de5b3"] ;
0 -> 26 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
27 [label="critical-payload-output-dependencies-number <= 0.5\ngini = 0.208\nsamples = 636\nvalue = [75, 561]\nclass = parallelizable", fillcolor="#399de5dd"] ;
26 -> 27 ;
28 [label="critical-payload-reg-dependencies-number <= 16.5\ngini = 0.13\nsamples = 558\nvalue = [39, 519]\nclass = parallelizable", fillcolor="#399de5ec"] ;
27 -> 28 ;
29 [label="(...)", fillcolor="#C0C0C0"] ;
28 -> 29 ;
80 [label="(...)", fillcolor="#C0C0C0"] ;
28 -> 80 ;
87 [label="critical-payload-total-cohesion <= 0.101\ngini = 0.497\nsamples = 78\nvalue = [36, 42]\nclass = parallelizable", fillcolor="#399de524"] ;
27 -> 87 ;
88 [label="(...)", fillcolor="#C0C0C0"] ;
87 -> 88 ;
91 [label="(...)", fillcolor="#C0C0C0"] ;
87 -> 91 ;
110 [label="payload-mem-write-fraction <= 0.053\ngini = 0.469\nsamples = 181\nvalue = [113, 68]\nclass = non-parallelizable", fillcolor="#e5813966"] ;
26 -> 110 ;
111 [label="loop-inner-loop-num <= 3.5\ngini = 0.42\nsamples = 60\nvalue = [18, 42]\nclass = parallelizable", fillcolor="#399de592"] ;
110 -> 111 ;
112 [label="(...)", fillcolor="#C0C0C0"] ;
111 -> 112 ;
117 [label="(...)", fillcolor="#C0C0C0"] ;
111 -> 117 ;
120 [label="critical-payload-total-cohesion <= 0.462\ngini = 0.337\nsamples = 121\nvalue = [95, 26]\nclass = non-parallelizable", fillcolor="#e58139b9"] ;
110 -> 120 ;
121 [label="(...)", fillcolor="#C0C0C0"] ;
120 -> 121 ;
146 [label="(...)", fillcolor="#C0C0C0"] ;
120 -> 146 ;
}